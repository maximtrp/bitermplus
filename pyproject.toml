[build-system]
requires = ["setuptools>=77", "wheel", "cython>=3.0.0", "numpy>=1.19.0"]
build-backend = "setuptools.build_meta"

[project]
name = "bitermplus"
dynamic = ["version"]
description = "Biterm Topic Model with sklearn-compatible API"
readme = "README.md"
requires-python = ">=3.9"
license-files = ["LICENSE"]
authors = [
    { name = "Maksim Terpilovskii", email = "maximtrp@gmail.com" },
]
maintainers = [
    { name = "Maksim Terpilovskii", email = "maximtrp@gmail.com" },
]
keywords = [
    "topic-modeling",
    "machine-learning",
    "nlp",
    "biterm",
    "sklearn",
    "text-mining",
    "unsupervised-learning"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Cython",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Text Processing :: Linguistic",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]
dependencies = [
    "numpy>=1.19.0",
    "pandas>=1.2.0",
    "scipy>=1.6.0",
    "scikit-learn>=1.0.0",
    "tqdm>=4.50.0",
]

[project.urls]
Homepage = "https://github.com/maximtrp/bitermplus"
Documentation = "https://bitermplus.readthedocs.io/"
Repository = "https://github.com/maximtrp/bitermplus.git"
"Bug Tracker" = "https://github.com/maximtrp/bitermplus/issues"

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.10",
    "black>=22.0",
    "isort>=5.10",
    "flake8>=4.0",
    "mypy>=0.950",
    "pre-commit>=2.15",
    "cython>=3.0.0",
]
docs = [
    "sphinx>=4.0",
    "sphinx-rtd-theme>=1.0",
    "nbsphinx>=0.8",
    "jupyter>=1.0",
]
test = [
    "pytest>=6.0",
    "pytest-cov>=2.10",
    "cython>=3.0.0",
]
benchmark = [
    "matplotlib>=3.3",
    "seaborn>=0.11",
    "gensim>=4.0",
]

[tool.setuptools]
include-package-data = false
zip-safe = false

[tool.setuptools.dynamic]
version = {attr = "bitermplus.__version__"}

[tool.setuptools.packages.find]
where = ["src"]
include = ["bitermplus*"]
exclude = ["tests*"]

[tool.setuptools.package-data]
bitermplus = ["py.typed"]

# Testing configuration
[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "--strict-markers",
    "--strict-config",
]
testpaths = ["tests"]
pythonpath = [".", "src"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

# Code formatting
[tool.black]
line-length = 88
target-version = ["py39", "py310", "py311", "py312", "py313"]
include = '\.pyi?$'
extend-exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

# Import sorting
[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88
src_paths = ["src", "tests"]

# Type checking
[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "scipy.*",
    "sklearn.*",
    "pandas.*",
    "tqdm.*",
]
ignore_missing_imports = true

# Coverage configuration
[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
